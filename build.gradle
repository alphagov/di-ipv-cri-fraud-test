/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.seleniumhq.selenium:selenium-java:4.1.2'
    implementation 'io.github.bonigarcia:webdrivermanager:5.1.0'
    implementation 'io.cucumber:cucumber-java:7.2.3'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    testImplementation 'io.rest-assured:rest-assured:4.5.1'
    testImplementation 'io.cucumber:cucumber-junit:7.2.3'
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.4.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.4.2")
    implementation group: 'com.deque', name: 'axe-selenium', version: '3.0'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.2.2'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.226'
    testImplementation group: 'software.amazon.awssdk', name: 's3', version: '2.17.191'

}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

group = 'org.example'
version = '1.0-SNAPSHOT'
description = 'ipv-core'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

test {
    useJUnitPlatform()
}

test {
    systemProperty "cucumber.filter.tags", System.getProperty("cucumber.filter.tags")

}
task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--tags', "${tags}", '--glue', 'gov/di_ipv_fraud/step_definitions', 'src/test/resources']
        }
    }
}

task kbvStubSmoke() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'gov/di_ipv_fraud/step_definitions', 'src/test/resources/features/', '--tags', '@kbv_smoke']
        }
    }
}

task passportCriSmokeBuild() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'gov/di_ipv_fraud/step_definitions', 'src/test/resources/features/', '--tags', '@passportSmokeBuild']
        }
    }
}

task passportCriSmokeStaging() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'gov/di_ipv_fraud/step_definitions', 'src/test/resources/features/', '--tags', '@passportSmokeStaging']
        }
    }
}
task addressStubSmoke() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'gov/di_ipv_fraud/step_definitions', 'src/test/resources/features/', '--tags', '@address_smoke']
        }
    }
}